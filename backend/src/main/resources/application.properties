spring.application.name=JobVector
spring.profiles.active=${SPRING_PROFILES_ACTIVE:embedding}

# Configuration de la base de donnees PostgreSQL
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Configuration JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Configuration du serveur
server.port=8080
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Configuration de securite JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Configuration des logs
logging.level.root=INFO
logging.level.com.example.jobvector=DEBUG
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n

# Configuration pour le support multipart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.location=temp

# Configuration du repertoire de stockage des CVs
app.upload.cv.directory=${CV_UPLOAD_DIR:uploads/cvs}

# Configuration pour le système de matching amélioré
app.matching.weighted-scoring.enabled=true
app.matching.weights.technical=0.4
app.matching.weights.experience=0.2
app.matching.weights.languages=0.2
app.matching.weights.soft-skills=0.1
app.matching.weights.education=0.1

# Configuration Spring AI avec Ollama
spring.ai.ollama.base-url=${OLLAMA_URL:http://localhost:11434}
spring.ai.ollama.chat.options.model=${OLLAMA_MODEL:llama3}
spring.ai.ollama.chat.options.temperature=${OLLAMA_TEMP:0.1}
spring.ai.ollama.chat.options.num-predict=${OLLAMA_PREDICT:2000}

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true



