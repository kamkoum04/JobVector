services:
  postgres:
    image: postgres:15
    container_name: jobvector-postgres
    environment:
      POSTGRES_USER: hamza
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - jobvector-network
    restart: unless-stopped

  embeddingservice:
    image: embeddingservice:latest
    container_name: embedding-service
    ports:
      - "5002:5002"
    networks:
      - jobvector-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: jobvector-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - jobvector-network
    restart: unless-stopped
    # Note: The llama3 model (~4.7GB) will be pulled on first use
    # You can pre-pull it by running: docker exec jobvector-ollama ollama pull llama3

  backend:
    image: jobvector-backend:latest
    container_name: jobvector-backend
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/mydb
      DB_USERNAME: hamza
      DB_PASSWORD: pass123
      JWT_SECRET: your-secret-key-change-this-in-production-minimum-256-bits
      JWT_EXPIRATION: 86400000
      EMBEDDING_SERVICE_URL: http://embeddingservice:5002
      USE_PYTHON_SERVICE: "true"
      EMBEDDING_FALLBACK: "true"
      SPRING_PROFILES_ACTIVE: embedding
      OLLAMA_URL: http://ollama:11434
      OLLAMA_MODEL: llama3
      OLLAMA_TEMP: 0.1
      OLLAMA_PREDICT: 2000
      CV_UPLOAD_DIR: uploads/cvs
    ports:
      - "8080:8080"
    volumes:
      - backend-uploads:/app/uploads
      - backend-temp:/app/temp
    depends_on:
      - postgres
      - embeddingservice
      - ollama
    networks:
      - jobvector-network
    restart: unless-stopped

  frontend:
    image: jobvector-frontend:latest
    container_name: jobvector-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jobvector-network
    restart: unless-stopped

networks:
  jobvector-network:
    driver: bridge

volumes:
  postgres-data:
  backend-uploads:
  backend-temp:
  ollama-data:
